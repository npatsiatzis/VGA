library ieee;
use ieee.numeric_std.all;

vunit formal_test(display_timings(rtl)) {

	default clock is rising_edge(i_clk);

	--assert that horizontal position counter stays within range
	assert_x_pos_wrap : assert always {prev(r_x) = line} |-> {r_x = 0}; 
	assert_x_range : assert always {r_x <=line};

	--assert that vertical position counter stays within range
	assert_y_pos : assert always {prev(r_x) = line and prev(r_y) = frame} |-> {r_y = 0};
	assert_y_range : assert always {r_y <=frame};

	--assert that horizontal sync signal assumes the appropriate values
	assert_h_sync_0 : assert always { r_x > hs_start and r_x <= hs_end} |-> {o_h_sync = '0'};
	assert_h_sync_1 : assert always { not(r_x > hs_start and r_x <= hs_end)} |-> {o_h_sync = '1'};

	--assert that vertical sync signal assumes the appropriate values
	assert_v_sync_0 : assert always { r_y > vs_start and r_y <= vs_end} |-> {o_v_sync = '0'};
	assert_v_sync_1 : assert always { not(r_y > vs_start and r_y <= vs_end)} |-> {o_v_sync = '1'};

	
}